name: 'publish'

on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
      id-token: write  # Necessary for Cosign and Sigstore signing
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'  # Windows build
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      # Checkout code from repository
      - uses: actions/checkout@v4

      # Setup Node.js (for frontend dependencies)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # Install Rust stable (Tauri requires Rust)
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # Install Bun for frontend (instead of npm or yarn)
      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      # Install frontend dependencies using Bun
      - name: Install frontend dependencies (Bun)
        run: bun install

      # Run frontend build
      - name: Run frontend build (Bun)
        run: bun run build

      # Use Tauri Action to build and release the app
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__  # Automatically replaces __VERSION__ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      # Get the release ID (to fetch the release assets for signing)
      - name: Get release ID
        id: release-id
        run: |
          release_id=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .id)
          echo "RELEASE_ID=$release_id" >> $GITHUB_ENV

      # Install Cosign
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1
        with:
          cosign-release: 'v2.4.3'

      # Load Cosign Private Key
      - name: Load Cosign Private Key
        run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" | tr -d '\r' > cosign.key

      # Load Cosign Public Key
      - name: Load Cosign Public Key
        run: echo "${{ secrets.COSIGN_PUBLIC_KEY }}" | tr -d '\r' > cosign.pub

      # Get the release assets URLs
      - name: Get release asset URLs
        id: assets
        run: |
          asset_urls=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets | \
            jq -r '.[].browser_download_url')
          echo "ASSET_URLS=$asset_urls" >> $GITHUB_ENV

      # Sign the release assets using Cosign
      - name: Sign release files with Cosign
        run: |
          for asset_url in ${{ env.ASSET_URLS }}; do
            cosign sign --yes --key cosign.key $asset_url
          done

      # Optionally, verify the signed files
      - name: Verify signed files
        run: |
          for asset_url in ${{ env.ASSET_URLS }}; do
            cosign verify --key cosign.pub $asset_url
          done
